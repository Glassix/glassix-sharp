name: Release

on:
  push:
    branches: ["master"]

env:
  CI_BUILD_NUMBER_BASE: ${{ github.run_number }}
  CI_TARGET_BRANCH: ${{ github.head_ref || github.ref_name }}

jobs:
  build:
    name: Build and pack.
    # The build must run on Windows so that .NET Framework targets can be built and tested.
    runs-on: windows-latest
    timeout-minutes: 15
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Retrieve .runsettings file
        run: |
          $env:RUNSETTINGS_FILE | Out-File -FilePath .runsettings -Encoding utf8
        shell: pwsh
        env:
          RUNSETTINGS_FILE: ${{ secrets.RUNSETTINGS_FILE }}
      - name: Compute build number
        shell: bash
        run: |
          echo "CI_BUILD_NUMBER=$(($CI_BUILD_NUMBER_BASE+100))" >> $GITHUB_ENV
      - name: Build and Publish
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          ./Build.ps1
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: artifacts/
          retention-days: 1

  release:
    name: Release Version.
    needs: build
    environment: nuget
    # The build must run on Windows so that .NET Framework targets can be built and tested.
    runs-on: windows-latest
    timeout-minutes: 15
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Compute build number
        shell: bash
        run: |
          echo "CI_BUILD_NUMBER=$(($CI_BUILD_NUMBER_BASE+100))" >> $GITHUB_ENV
      - name: Build and Publish
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          ./release.ps1
